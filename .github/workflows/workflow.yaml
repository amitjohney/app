name: app workflow
env:
  choice: green
  input: text
on: 
  workflow_dispatch:
  push:
    branches:
    - main
    - mybranch
jobs:
  unit-testing:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout action at unit-test job
      uses: actions/checkout@v4
    - name: Install flask
      run: pip3 install flask
    - name: Run app
      run: python3 app.py &
    - name: Give output
      id: myoutput
      run: curl http://127.0.0.1:5000?input=black
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: myartifact
        path: testoutput
  unit-coverage:
    runs-on: ubuntu-latest
    needs: unit-testing
    continue-on-error: false
    steps:
    - name: Checkout action at unit-coverage job
      uses: actions/checkout@v4
    - name: Install flask
      run: pip3 install flask
    - name: Installing requests module
      run: pip3 install requests
    - name: Run app
      run: python3 app.py &
    - name: Download artifact created in unit-testing job
      uses: actions/download-artifact@v4
      with:
        name: myartifact
    - name: Running Test script test.py
      id: myoutput
      run: python3 test.py
      env:
        ENV_NAME: local
    - name: Check content of Downloaded artifact form unit-testing job
      run: cat testoutput
    - name: Upload coverage artifact report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: testoutput
  integration-test:
    runs-on: ubuntu-latest
    needs: unit-coverage
    steps:
    - name: Checkout action at Docker login job
      uses: actions/checkout@v4
    - name: Try Docker login
      uses: docker/login-action@v3
      with:
        username: ${{vars.DOCKERHUB_USERNAME}}
        password: ${{secrets.DOCKERHUB_PASSWORD}}
    - name: Docker build
      uses: docker/build-push-action@v3
      with:
        context: .
        push: false
        tags: ${{vars.DOCKERHUB_USERNAME}}/myworkflowappqsimage-${{github.sha}}
    - name: Run container from image
      run: docker run -d -p 5000:5000 --name test ${{vars.DOCKERHUB_USERNAME}}/myworkflowappqsimage-${{github.sha}} 
    - name: check docker ps before sleep
      run: docker ps
    - name: check docker logs before sleep
      run: docker logs test
    - name: Sleep for 5 seconds
      run: sleep 5
    - name: check api output after sleep
      run: curl http://localhost:5000?input=green
    - name: Docker Push
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        tags: ${{vars.DOCKERHUB_USERNAME}}/myworkflowappqsimage-${{github.sha}}
  dev-deploy:
    runs-on: ubuntu-latest
    needs: integration-test
    environment:
      name: dev
      url: https://amitapppod-service-amit-${{ENV_NAME}}.apps.opc-sonf-ogn.orange-guinee.com/?input=green
    steps:
    - name: Checkout action at dev-deploy jobs
      uses: actions/checkout@v4
    - name: Install oc
      uses: redhat-actions/openshift-tools-installer@v1
      with:
        source: "github"
        github_pat: "${{github.token}}"
        kam: "latest"
    - name: Setup oc
      uses: redhat-actions/oc-login@v1
      with:
        openshift_server_url: https://api.opc-sonf-ogn.orange-guinee.com:6443
        openshift_token: sha256~FWfBMPsaoKSIfl21tUurD03EgsVbjJu3tj9HkVVLJV4
    - name: Get node info
      run: oc get nodes
    - name: Replacing image name in kubernetes/development/deployment.yaml
      uses:  cschleiden/replace-tokens@v1
      with:
        tokenPrefix: '_{_'
        tokenSuffix: '_}_'
        files: '["kubernetes/development/deployment.yaml"]'
      env:
        imagename: ${{vars.DOCKERHUB_USERNAME}}/myworkflowappqsimage-${{github.sha}}
        mychoice: ${{env.choice}}
        ENV_NAME: ${{ vars.ENV_NAME}}
        NODE_PORT: ${{vars.NODE_PORT}}

    - name: Deploy on dev environment
      run: oc apply -f kubernetes/development/deployment.yaml

  prod-deploy:
    runs-on: ubuntu-latest
    needs: dev-deploy
    if: contains(github.ref,'main')
    environment:
        name: prod
        url: https://amitapppod-service-amit-${{vars.ENV_NAME}}.apps.opc-sonf-ogn.orange-guinee.com/?input=green
    steps:
    - name: Checkout action at prod-deploy jobs
      uses: actions/checkout@v4
    - name: Install oc
      uses: redhat-actions/openshift-tools-installer@v1
      with:
        source: "github"
        github_pat: "${{github.token}}"
        kam: "latest"
    - name: Setup oc
      uses: redhat-actions/oc-login@v1
      with:
        openshift_server_url: https://api.opc-sonf-ogn.orange-guinee.com:6443
        openshift_token: sha256~FWfBMPsaoKSIfl21tUurD03EgsVbjJu3tj9HkVVLJV4
    - name: Get node info
      run: oc get nodes
    - name: Replacing image name in kubernetes/development/deployment.yaml
      uses:  cschleiden/replace-tokens@v1
      with:
        tokenPrefix: '_{_'
        tokenSuffix: '_}_'
        files: '["kubernetes/development/deployment.yaml"]'
      env:
        imagename: ${{vars.DOCKERHUB_USERNAME}}/myworkflowappqsimage-${{github.sha}}
        mychoice: ${{env.choice}}
        ENV_NAME: ${{ vars.ENV_NAME}}
        NODE_PORT: ${{vars.NODE_PORT}}

    - name: Deploy on prod environment
      run: oc apply -f kubernetes/development/deployment.yaml

  integration-test-post:
    runs-on: ubuntu-latest
    if: contains(github.ref,'main')
    needs: prod-deploy
    strategy:
      matrix:
        testenv: [dev,prod]
    env:
      ENV_NAME: ${{ matrix.testenv}}
    steps:
    - name: Checkout action at prod-integration-step
      uses: actions/checkout@v4
    - name: Install pip3
      run: pip3 install requests
    - name: Test
      run: python3 test.py



    





